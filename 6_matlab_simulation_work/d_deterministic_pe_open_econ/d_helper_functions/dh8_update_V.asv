function [Vchange, v] = dh8_update_V(v,V,dist, params)

% unpack params 
fields = fieldnames(params); % Get the field names of the structure
for idx = 1:length(fields); eval([fields{idx} ' = params.' fields{idx} ';']); end


Vchange = abs(V - v);
baseline = median(Vchange);
n = length(dist);
% Classify indices
problem_indices  = Vchange > 1e2 * baseline & Vchange < 1e4 * baseline;
garbage_indices  = Vchange > 1e4 * baseline;

% Check for steady downward trend if applicable
steady_down = false;
if n > 100
    idx = (n-99):(n-1);  % 99 steps: from n-99 to n-1
    steady_down = all(diff(dist(idx)) < 0);
end

% Set relaxation parameters
relax = .9 * ones(size(V));
if steady_down
    relax(problem_indices) = .99;
    relax(garbage_indices) = .995;
else
    relax(problem_indices) = .995;
    relax(garbage_indices) = .999;
end
if size(networks,2) == 1 & networks ~= [1,0]
    relax = 0

v = relax .* v + (1 - relax) .* V;
